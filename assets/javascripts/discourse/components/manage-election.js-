import Component from "@glimmer/component";
import { tracked } from "@glimmer/tracking";
import { action } from "@ember/object";
import { inject as service } from "@ember/service";
import { ElectionStatuses } from "../lib/election";

export default class ManageElectionComponent extends Component {
  @service flashMessages; // To display error messages

  @tracked topic = this.args.model.topic;
  @tracked usernamesString = this.topic.election_nominations_usernames.join(",");
  @tracked position = this.topic.election_position;
  @tracked status = this.topic.election_status;

  get usernames() {
    return this.usernamesString.split(",").filter(Boolean);
  }

  get positionInvalid() {
    return !this.position || this.position.length < 3;
  }

  get electionStatuses() {
    return Object.keys(ElectionStatuses).map((key) => ({
      name: key,
      id: ElectionStatuses[key],
    }));
  }

  @action
  close() {
    this.args.closeModal?.(); // Close the modal using the provided callback
  }

  @action
  handleError(message) {
    this.flashMessages.error(message); // Display an error message
  }

  @action
  saveChanges() {
    this.args.model.rerender?.(); // Call rerender if provided
  }
}
